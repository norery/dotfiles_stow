;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; DO NOT EDIT THIS FILE DIRECTLY
;; This is a file generated from a literate programing source file located at
;; https://gitlab.com/zzamboni/dot-doom/-/blob/master/doom.org
;; You should make any changes there and regenerate it from Emacs org-mode
;; using org-babel-tangle (C-c C-v t)

;; Place your private configuration here! Remember, you do not need to run 'doom
;; sync' after modifying this file!

;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets.
;; (setq user-full-name "John Doe"
;;      user-mail-address "john@doe.com")

;; Doom exposes five (optional) variables for controlling fonts in Doom. Here
;; are the three important ones:
;;
;; + `doom-font'
;; + `doom-variable-pitch-font'
;; + `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;;
;; They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
;; font string. You generally only need these two:
;; (setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
;;       doom-variable-pitch-font (font-spec :family "sans" :size 13))

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
;; (setq doom-theme 'doom-one)

;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
;; (setq org-directory "~/org/")

;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
;; (setq display-line-numbers-type t)

;; Here are some additional functions/macros that could help you configure Doom:
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.

(setq user-full-name "Tintingo"
      user-mail-address "norery@163.com")

(setq doom-font (font-spec :family "Source Code Pro" :size 14))

(advice-add 'ispell-lookup-words :around
            (lambda (orig &rest args)
              (shut-up (apply orig args))))

(setq doom-theme 'doom-solarized-light)

(setq display-line-numbers-type 'relative)

(setq ein:output-area-inlined-images t)

;; (setq initial-frame-alist (quote ((fullscreen . maximized))))   ;; 默认全屏

;; 修改当前行的高亮背景色。 M-x 运行describe-char -> Face: h1-line -> Background: #0D343E 可以看到这个值。通过(customize this face) 修改，被保存在 ~/.emacs.d/.local/custom.el 文件
'(hl-line ((t (:background "#0D343E" ))))

;; ;;光标在括号内时就高亮包含内容的两个括号
(defadvice show-paren-function (around fix-show-paren-function activate)
  (cond ((looking-at-p "\\s(") ad-do-it)
        (t (save-excursion
             (ignore-errors (backward-up-list))
             ad-do-it)))
  )

;; (let ((alternatives '("doom-emacs-bw-light.svg"
;;                       ;; "doom-emacs-flugo-slant_out_purple-small.png"
;;                       ;; "doom-emacs-flugo-slant_out_bw-small.png"
;;                       )))
;;   (setq fancy-splash-image
;;         (concat doom-private-dir "splash/"
;;                 (nth (random (length alternatives)) alternatives))))

;; (setq +doom-dashboard-menu-sections (cl-subseq +doom-dashboard-menu-sections 0 2))

;; 彩虹猫进度条
(use-package nyan-mode
  :if (not (boundp 'awesome-tray-mode))
  :ensure t
  :hook (after-init . nyan-mode)
  :config
  (setq nyan-wavy-trail t
		nyan-animate-nyancat t))

(use-package! evil-escape
        :init
        (setq evil-escape-key-sequence "jj")
        )

(map! :leader
      :desc "Like M-x"          :n        "SPC"   #'execute-extended-command
      :desc "Next buffer"       :n        "bj"    #'next-buffer
      :desc "Previous-buffer"   :n        "bk"    #'previous-buffer
      ;; Switch to TAB + number
      :desc "switch to TAB 1"   :n        "1"       #'+workspace/switch-to-0
      :desc "switch to TAB 2"   :n        "2"       #'+workspace/switch-to-1
      :desc "switch to TAB 3"   :n        "3"       #'+workspace/switch-to-2
      ;; kill shortcuts key bindings.
      :nv "b[" nil
      :nv "b]" nil
      )

(map! :map org-mode-map
      :desc "org previous heading"      :n      "SPC k"    #'org-previous-visible-heading
       ;; can not use "SPC-j"
      :desc "org next headng"           :n      "SPC j"    #'org-next-visible-heading
  )

;; 以当前文件的可视行为单位进行移动.
(evil-global-set-key 'motion "j" 'evil-next-visual-line)
(evil-global-set-key 'motion "k" 'evil-previous-visual-line)

;; use =command k=  to move five lines up
;; use =command j= to move five lines down
(map!
      :desc "move next 5 line"       :nvi          "C-j"    #'(lambda () (interactive) (forward-line 5))
      :desc "move previous 5 line"   :nvi          "C-k"    #'(lambda () (interactive) (forward-line -5)))

;;;;;;;; Ein KeyBinding
(map! :map ein:notebook-mode-map
      :leader
      :desc "ein:insert above"         :n    "ea"        #'ein:worksheet-insert-cell-above-km
      :desc "ein:insert below"         :n    "eb"        #'ein:worksheet-insert-cell-next-km
      :desc "ein:Run all"              :n    "ell"       #'ein:worksheet-execute-all-cells
      :desc "ein:To next cell"         :n    "ej"        #'ein:worksheet-goto-next-input-km
      :desc "ein:To prev cell"         :n    "ek"        #'ein:worksheet-goto-prev-input-km
      :desc "ein:Change cell type"     :n    "eu"        #'ein:worksheet-change-cell-type-km
      :desc "ein:Restart session"      :n    "err"       #'ein:notebook-restart-session-command-km
      :desc "ein:kill cell"            :n    "ed"        #'ein:worksheet-kill-cell-km
      :desc "ein:interrupt kernel"     :n    "ez"        #'ein:notebook-kernel-interrupt-command-km
      :desc "ein:toggle output"        :n    "et"        #'ein:worksheet-toggle-output-km
      :desc "ein:show output"          :n    "ev"        #'ein:worksheet-set-output-visibility-all-km
      :desc "ein:login"                :n    "el"        #'ein:login
      :desc "ein:stop"                 :n    "ep"        #'ein:stop
      :desc "ein:open notebook"        :n    "eo"        #'ein:notebook-open-km
      )

(setq org-directory "~/Documents/OrgType/")

(use-package org-superstar
  :ensure t
  :after org
  :hook (org-mode . org-superstar-mode)
  :custom
    ( with-eval-after-load  'org-superstar)
    (org-superstar-headline-bullets-list '("☰" "☷" "✿" "☭"))
    (org-superstar-cycle-headline-bullets nil )
    ;; This is usually the default, but keep in mind it must be nil
    (setq org-hide-leading-stars nil)
    ;; This line is necessary.
    (setq org-superstar-leading-bullet ?\s)
    ;; If you use Org Indent you also need to add this, otherwise the
    ;; above has no effect while Indent is enabled.
    (setq org-indent-mode-turns-on-hiding-stars nil)

  )

(use-package org-appear
  :ensure t
  :after org
  :hook (org-mode . org-appear-mode)
  :custom
    ;; allow to toggle links
    (org-appear-autolinks t)
    ;; allow to toggle subscripts and superscripts
    (org-appear-autosubmarkers t)
    ;; toggle Org entitites
    (org-appear-autoentities t)
    ;; toggle keywords in org-hidden-keywords
    (org-appear-autokeywords t)
    ;; if greater than 0, toggle with an idle delay
    (org-appear-delay 0.5)
  )
;; (add-hook 'org-mode-hook 'org-appear-mode)

(use-package! org-ol-tree
  :commands org-ol-tree)
(map! :map org-mode-map
      :after org
      :localleader
      :desc "open org-ol-tree" "O" #'org-ol-tree)

(require 'pangu-spacing)
(global-pangu-spacing-mode 1)
(setq pangu-spacing-real-insert-separtor t)

(use-package conda
  :ensure t
  :init
  (setq conda-anaconda-home (expand-file-name "~/opt/anaconda3"))
  (setq conda-env-home-directory (expand-file-name "~/opt/anaconda3")))

;; 递归遍历加载路径 test
  (defun add-subdirs-to-load-path(dir)
    "Recursive add directories to `load-path`."
    (let ((default-directory (file-name-as-directory dir)))
      (add-to-list 'load-path dir)
      (normal-top-level-add-subdirs-to-load-path)))

  (let ((gc-cons-threshold most-positive-fixnum)
        (file-name-handler-alist nil))
    ;; 将配置文件添加进load-path
    (add-subdirs-to-load-path "~/.doom.d/etc/")
;;     ;; (unless (file-exists-p "~/.config/.evan-emacs.d/")
;;     ;;   (mkdir "~/.config/.evan-emacs.d"))
;;     ;; (add-subdirs-to-load-path "~/.config/.evan-emacs.d/"))

    )

;; 所有配置自带的模块
(require 'init-config)
